// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Category {
  id      Int      @id @default(autoincrement())
  name    String   // Tên danh mục
  products Product[] // Quan hệ 1-n với bảng Product
}

model Cart {
  id         Int       @id @default(autoincrement())  
  userId     Int       
  productId  Int       
  quantity   Int       
  createdAt  DateTime  @default(now())  
  updatedAt  DateTime  @updatedAt

  user       User      @relation(fields: [userId], references: [id], name: "UserCartRelation")  
  product    Product   @relation(fields: [productId], references: [id], name: "ProductCartRelation") 
  @@unique([userId, productId]) // Đây là compound unique key
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique       
  password  String
  role      String   @default("user") // "admin" hoặc "user"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt    

  cartItems Cart[]   @relation("UserCartRelation") // Quan hệ ngược lại
   
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  image       String
  categoryId  Int?     // Cột categoryId
  category    Category? @relation(fields: [categoryId], references: [id])  

  cartItems   Cart[]   @relation("ProductCartRelation") // Quan hệ ngược lại
}

model BlogCategory {
  id    Int     @id @default(autoincrement())
  name  String
  Blog  Blog[]
}

model Blog {
  id            Int          @id @default(autoincrement())
  title         String
  summary       String
  content       String
  imageUrl      String
  blogCategoryId Int
  category      BlogCategory @relation(fields: [blogCategoryId], references: [id])
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

